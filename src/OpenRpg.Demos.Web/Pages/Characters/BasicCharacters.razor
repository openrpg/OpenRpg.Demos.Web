@page "/characters/basic"
@using OpenRpg.Genres.Fantasy.Characters
@using OpenRpg.Genres.Fantasy.Defaults
@using OpenRpg.Core.Defaults
@using OpenRpg.Genres.Fantasy.Extensions

<div class="columns">
  <div class="column is-half">
    <Markdown>
      ## Basic Hardcoded Character
      So by default in `OpenRpg.Core` there is no notion of a character, we just have the notion of classes, races, mods etc.
      
      However when we reach the `OpenRpg.Fantasy` library we kinda know what sort of character you would have in mind and 
      have an `ICharacter` which is seen as the most bare bones character available.
      
      This character interface can be implemented yourself, or you can just use the `DefaultCharacter` object as shown below.
      
      ```csharp
      ICharacter _manualCharacter = new DefaultCharacter();
      ```
      
      Then you can set whatever parts of it you want, like lets give it a name and a race/class:
      
      ```csharp
      _manualCharacter.NameLocaleId = "John";
      _manualCharacter.Race = new DefaultRaceTemplate { NameLocaleId = "Human" };
      _manualCharacter.Class = new DefaultCharacterClass(3, new DefaultClassTemplate { NameLocaleId = "Fighter" });
      ```
      
      Thats enough for the basic stuff, but they also need some stats ideally:
      
      ```csharp
      _manualCharacter.Stats = new DefaultEntityStats();
      _manualCharacter.Stats.Strength(10);
      _manualCharacter.Stats.Dexterity(11);
      _manualCharacter.Stats.Intelligence(12);
      _manualCharacter.Stats.Wisdom(13);
      _manualCharacter.Stats.Charisma(14);
      ```
      
    </Markdown>
  </div>
  <div class="column is-half">
    <BasicCharacter Character="@_manualCharacter"></BasicCharacter>
  </div>
</div>



@code {
  private DefaultCharacter _manualCharacter = new DefaultCharacter();

  protected override void OnInitialized()
  {
    _manualCharacter.NameLocaleId = "John";
    _manualCharacter.Race = new DefaultRaceTemplate { NameLocaleId = "Human" };
    _manualCharacter.Class = new DefaultCharacterClass(3, new DefaultClassTemplate { NameLocaleId = "Fighter" });
    
    _manualCharacter.Stats = new DefaultEntityStats();
    _manualCharacter.Stats.Strength(10);
    _manualCharacter.Stats.Dexterity(11);
    _manualCharacter.Stats.Intelligence(12);
    _manualCharacter.Stats.Wisdom(13);
    _manualCharacter.Stats.Charisma(14);
    
    base.OnInitialized();
  }

}